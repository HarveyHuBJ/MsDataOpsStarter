name: CD-04-Databricks

on:
  workflow_run:
    workflows: [CI-04-Databricks]
    types:
      - completed

  workflow_dispatch:
  workflow_call:
  push:
    branches:
      - "main"
env:
  FAMILY_NAME: hh101 
  ENV_NAME: sit 
  ARTIFACT_NAME: az_databricks_artifact
  RESOURCE_GROUP_NAME: rg-dataops-starter
  DATABRICKS_NAME: dbk-ws-hh101-sit
  DATABRICKS_TOKEN: dbk-ws-hh101-sit

# Get-AzDataFactoryV2Trigger -ResourceGroupName rg-dataops-starter -DataFactoryName adf-hh101-dev
jobs:
  publish-adf:
    runs-on: ubuntu-latest

    steps:
#### Download Artifact
      - name: Download artifact from CI
        uses: aochmann/actions-download-artifact@1.0.4
        with:
          repo: HarveyHuBJ/MsDataOpsStarter
          github_token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.ARTIFACT_NAME }}
          path: dist

# #### install databricks CLI
      - name: install-databricks-cli
        uses: microsoft/install-databricks-cli@main

# #### databricks-import-directory
      - name: databricks-import-directory
        run: | 
          echo "Uploading notebooks from $LOCAL_NOTEBOOKS_PATH to $REMOTE_NOTEBOOK_PATH in the workspace $DATABRICKS_HOST"
          databricks workspace import_dir --overwrite "${LOCAL_NOTEBOOKS_PATH}" "${REMOTE_NOTEBOOK_PATH}" --debug
        shell: bash
        env:
          DATABRICKS_HOST: https://adb-336735846936280.0.azuredatabricks.net
          DATABRICKS_TOKEN: dapi7b1ec4a537bfe2ad44e0c9c925848ef0
          LOCAL_NOTEBOOKS_PATH: ./dist
          REMOTE_NOTEBOOK_PATH: /Users/adminuser@cpuhackthon.onmicrosoft.com/

   
    

# #### Azure login 
#       - uses: azure/login@v1                            # Azure login required to add a temporary firewall rule
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}
#           enable-AzPSSession: true                      # or error: Run Connect-AzAccount to login

# #### Upload files
#       - name: Upload files
#         uses: databricks/upload-dbfs-temp@v0
#         id: upload_wheel
#         with:
#           local-path: dist/*
#           databricks-host: ${{ env.DATABRICKS_NAME }}
#           databricks-token:  ${{ env.DATABRICKS_TOKEN }}

 

